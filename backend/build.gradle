plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
    id 'checkstyle'
    id 'jacoco'
    id 'org.owasp.dependencycheck' version '9.0.9'
    id 'org.sonarqube' version '4.4.1.3373'
}

group = 'io.authplatform'
version = '0.1.0-SNAPSHOT'

java {
    sourceCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Database
    runtimeOnly 'org.postgresql:postgresql'
    implementation 'org.flywaydb:flyway-core'

    // Caching
    implementation 'com.github.ben-manes.caffeine:caffeine:3.1.8'
    implementation 'io.lettuce:lettuce-core'

    // Rate Limiting
    implementation 'com.bucket4j:bucket4j-core:8.10.1'
    implementation 'com.bucket4j:bucket4j-redis:8.10.1'

    // Metrics & Monitoring
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // API Documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // Utilities
    implementation 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // Development
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.testcontainers:testcontainers:1.19.3'
    testImplementation 'org.testcontainers:postgresql:1.19.3'
    testImplementation 'org.testcontainers:junit-jupiter:1.19.3'
    testImplementation 'io.rest-assured:rest-assured:5.4.0'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacoco {
    toolVersion = "0.8.11"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = true
        html.required = true
    }
}

jacocoTestCoverageVerification {
    violationRules {
        rule {
            limit {
                minimum = 0.80
            }
        }
    }
}

checkstyle {
    toolVersion = '10.12.7'
    configFile = file("${rootDir}/config/checkstyle/checkstyle.xml")
}

checkstyleMain {
    source = 'src/main/java'
}

checkstyleTest {
    source = 'src/test/java'
}

// OWASP Dependency Check configuration
dependencyCheck {
    format = 'HTML'
    failBuildOnCVSS = 7
    suppressionFile = "${rootDir}/config/dependency-check-suppressions.xml"
    analyzers {
        assemblyEnabled = false
        nugetconfEnabled = false
        nodeEnabled = false
    }
}

// SonarQube configuration
sonar {
    properties {
        property "sonar.projectKey", "auth-platform"
        property "sonar.projectName", "Auth Platform"
        property "sonar.projectVersion", "${version}"
        property "sonar.host.url", System.getenv("SONAR_HOST_URL") ?: "http://localhost:9000"

        // SonarCloud organization (required for SonarCloud)
        if (System.getenv("SONAR_ORGANIZATION")) {
            property "sonar.organization", System.getenv("SONAR_ORGANIZATION")
        }

        property "sonar.sources", "src/main/java"
        property "sonar.tests", "src/test/java"
        property "sonar.java.source", "21"
        property "sonar.java.binaries", "build/classes"
        property "sonar.coverage.jacoco.xmlReportPaths", "build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.junit.reportPaths", "build/test-results/test"
        property "sonar.java.checkstyle.reportPaths", "build/reports/checkstyle/main.xml,build/reports/checkstyle/test.xml"

        // Quality gates
        property "sonar.qualitygate.wait", "false"

        // Code coverage settings
        property "sonar.coverage.exclusions", "**/*Config.java,**/*Application.java,**/*Entity.java,**/*DTO.java"

        // Duplicate detection
        property "sonar.cpd.exclusions", "**/*Entity.java,**/*DTO.java"
    }
}
