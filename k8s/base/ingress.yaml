---
# IMPORTANT: This Ingress configuration assumes you have an Ingress Controller installed
# For GKE, you can use:
#   1. GKE Ingress (default, uses Google Cloud Load Balancer)
#   2. NGINX Ingress Controller
#
# To install NGINX Ingress Controller on GKE:
#   kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.1/deploy/static/provider/cloud/deploy.yaml

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: auth-platform-ingress
  namespace: auth-platform-staging
  annotations:
    # For GKE Ingress (Google Cloud Load Balancer)
    kubernetes.io/ingress.class: "gce"

    # Uncomment for NGINX Ingress Controller
    # kubernetes.io/ingress.class: "nginx"
    # nginx.ingress.kubernetes.io/ssl-redirect: "true"
    # nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

    # Enable HTTPS redirect (for production with SSL)
    # kubernetes.io/ingress.allow-http: "false"

    # CORS configuration (if needed)
    # nginx.ingress.kubernetes.io/enable-cors: "true"
    # nginx.ingress.kubernetes.io/cors-allow-origin: "*"
spec:
  rules:
    # Frontend (main domain)
    - host: auth-platform-staging.example.com  # Replace with your domain
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 3000

    # Backend API (api subdomain)
    - host: api-staging.example.com  # Replace with your domain
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: backend-service
                port:
                  number: 8080

  # TLS configuration (uncomment when you have SSL certificates)
  # tls:
  #   - hosts:
  #       - auth-platform-staging.example.com
  #       - api-staging.example.com
  #     secretName: auth-platform-tls
---
# Example: SSL Certificate using cert-manager (optional)
# Make sure cert-manager is installed in your cluster
# kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.13.0/cert-manager.yaml
#
# apiVersion: cert-manager.io/v1
# kind: Certificate
# metadata:
#   name: auth-platform-tls
#   namespace: auth-platform-staging
# spec:
#   secretName: auth-platform-tls
#   issuerRef:
#     name: letsencrypt-prod
#     kind: ClusterIssuer
#   dnsNames:
#     - auth-platform-staging.example.com
#     - api-staging.example.com
