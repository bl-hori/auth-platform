version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: authplatform-postgres
    environment:
      POSTGRES_DB: authplatform
      POSTGRES_USER: authplatform
      POSTGRES_PASSWORD: authplatform
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U authplatform"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - authplatform

  redis:
    image: redis:7-alpine
    container_name: authplatform-redis
    command: redis-server --appendonly yes
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - authplatform

  opa:
    image: openpolicyagent/opa:0.60.0
    container_name: authplatform-opa
    command:
      - "run"
      - "--server"
      - "--log-level=debug"
      - "--log-format=json"
    ports:
      - "8181:8181"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8181/health"]
      interval: 10s
      timeout: 3s
      retries: 5
    networks:
      - authplatform

  keycloak:
    image: quay.io/keycloak/keycloak:24.0
    container_name: authplatform-keycloak
    environment:
      # Database configuration
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://postgres:5432/keycloak
      KC_DB_USERNAME: authplatform
      KC_DB_PASSWORD: authplatform
      KC_DB_SCHEMA: keycloak

      # Admin credentials (CHANGE IN PRODUCTION)
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin

      # Hostname configuration
      KC_HOSTNAME: localhost
      KC_HOSTNAME_PORT: 8180
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false

      # HTTP configuration (dev mode)
      KC_HTTP_ENABLED: true
      KC_HTTP_PORT: 8080

      # Health check
      KC_HEALTH_ENABLED: true
      KC_METRICS_ENABLED: true
    command:
      - start-dev
      - --import-realm
    ports:
      - "8180:8080"
    volumes:
      - ../backend_auth/realms:/opt/keycloak/data/import:ro
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "exec 3<>/dev/tcp/localhost/8080 && echo -e 'GET /health/ready HTTP/1.1\\r\\nHost: localhost\\r\\nConnection: close\\r\\n\\r\\n' >&3 && cat <&3 | grep -q '200 OK'"]
      interval: 15s
      timeout: 5s
      retries: 10
      start_period: 60s
    networks:
      - authplatform

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local

networks:
  authplatform:
    driver: bridge
